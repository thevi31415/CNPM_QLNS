<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>